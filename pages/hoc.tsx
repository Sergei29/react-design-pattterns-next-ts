import React, { useState } from "react"
import type { NextPage } from "next"
import Head from "next/head"
import PageContainer from "../src/containers/PageContainer"
import Divider from "../src/components/Divider"
import ProductDisplay from "../src/components/ProductDisplay"
import { Loader, Error, NoData } from "../src/components/common"
import SingleInputForm from "../src/components/common/SingleInputForm"
import withPrintProps from "../src/hoc/withPrintProps"
import withProduct from "../src/hoc/withProduct"
import { products } from "../src/mocks"

const LoggedProductDisplay = withPrintProps(ProductDisplay)

type ProductCardProps = {
  title: string
  productId: number
  data: { product: Record<string, any> }
  loading: boolean
  error: null | string
}
const ProductCard = withProduct(
  ({ title, data, loading, error }: ProductCardProps) => {
    const renderData = () => {
      if (loading) return <Loader />
      if (error) return <Error message={error} />
      if (!data) return <NoData />
      return <ProductDisplay product={data.product} />
    }

    return (
      <>
        <h3>{title}</h3>
        {renderData()}
      </>
    )
  }
)

const HOC: NextPage = () => {
  const [productId, setProductId] = useState<null | number>(null)

  const onSubmitSuccess = (id: number) => {
    setProductId(id)
  }
  return (
    <>
      <Head>
        <title>React Patterns | HOC</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageContainer>
        <h1>Higher-Order Components</h1>
        <LoggedProductDisplay product={products[0]} />
        <Divider />
        <SingleInputForm onSubmitSuccess={onSubmitSuccess} />
        {productId && (
          <ProductCard title="Product display" productId={productId} />
        )}
      </PageContainer>
    </>
  )
}

export default HOC
