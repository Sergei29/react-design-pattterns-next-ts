import React, { useState } from "react"
import type { NextPage } from "next"
import Head from "next/head"
import UserDisplay from "../src/components/UserDisplay"
import ProductDisplay from "../src/components/ProductDisplay"
import CurrentUserLoader from "../src/containers/CurrentUserLoader"
import ResourceLoader from "../src/containers/ResourceLoader"
import PageContainer from "../src/containers/PageContainer"
import Divider from "../src/components/Divider"

const Home: NextPage = () => {
  const [formValue, setFormValue] = useState<null | number>(null)
  const [userId, setUserId] = useState<string>("")

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setFormValue(null)
    setUserId(event.target.value)
  }

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault()
    if (userId.trim().length === 0) return
    const intUserId = parseInt(userId, 10)
    if (typeof intUserId === "number") {
      setFormValue(parseInt(userId, 10))
    }
  }

  return (
    <>
      <Head>
        <title>React Patterns | Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageContainer>
        <form onSubmit={handleSubmit}>
          <input
            type="text"
            value={userId}
            onChange={handleChange}
            placeholder="type user ID"
          />
          <button type="submit">submit</button>
        </form>
        <CurrentUserLoader userId={formValue}>
          <UserDisplay />
        </CurrentUserLoader>
        <Divider />
        <ResourceLoader
          resourceURL={formValue ? `api/users/${formValue}` : null}
          resourceName="user"
        >
          <UserDisplay />
        </ResourceLoader>
        <Divider />
        <ResourceLoader
          resourceURL={formValue ? `api/products/${formValue}` : null}
          resourceName="product"
        >
          <ProductDisplay />
        </ResourceLoader>
      </PageContainer>
    </>
  )
}

export default Home
